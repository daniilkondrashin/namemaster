stages:
  - test
  - docker_deploy
  - k8s_deploy
variables:
  IMAGE_NAME: daniil3680/namemaster
  IMAGE_TAG: '0.1'
  K8S_DEV_API_URL: https://kubernetes.default
  NAMESPACE: namemaster
services:
  - docker:25.0.1-dind

test:
  image: creatiwww/docker-compose:latest
  stage: test
  only:
    - main
  before_script:
    - apk add --no-cache docker-compose
  script:
    - docker-compose build
    - docker-compose -f docker-compose.test.yaml up --exit-code-from web
docker_deploy: 
  image: docker:25.0.1
  stage: docker_deploy
  only:
    - main
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - docker login -u $REGISTRY_USER -p $REGISTRY_PASS
  script:
    - docker build -t $IMAGE_NAME:$IMAGE_TAG .
    - docker push $IMAGE_NAME:$IMAGE_TAG 
k8s_deploy:
  image:
    name: centosadmin/kubernetes-helm:latest
    entrypoint: ['']
  stage: k8s_deploy
  tags:
    - kuber_gitlab-runner
  only:
    - main
  script:
    - ls -la
    - kubectl config set-cluster k8s --insecure-skip-tls-verify=true --server=$K8S_DEV_API_URL
    - kubectl config set-credentials ci --token=$K8S_DEV_CI_TOKEN
    - kubectl config set-context ci --cluster=k8s --user=ci
    - kubectl config use-context ci
    - helm upgrade --install namemaster .helm/namemaster 
        --set image.repository=$IMAGE_NAME
        --set image.tag=$IMAGE_TAG
        --atomic
        --timeout 120s
        --namespace namemaster



